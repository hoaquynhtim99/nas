.body {
    background-color: var(--nv-body-bg);
}

.main-content {
    margin-left: calc($left-sidebar-width);
    min-height: calc(100vh - $header-height - $footer-height);
    margin-top: $header-height;
    transition: margin-left .2s ease-in-out;

    @media (max-width: #{$theme-breakpoint}) {
        margin-top: 0;
        margin-left: 0;
        min-height: calc(100vh - $header-height - $footer-height - $left-sidebar-toggle-height);
    }
}

.collapsed-left-sidebar {
    .main-content {
        margin-left: calc($left-sidebar-width-sm);

        @media (max-width: #{$theme-breakpoint}) {
            margin-left: 0;
        }
    }
}

.ico-vc {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
}

// Offcanvas admin session
.nv-offcanvas {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    z-index: $zindex-nv-offcanvas;
    transition: transform .2s ease-in-out;
    transform: translate(0, -101%);

    &.show {
        transform: translate(0, 0);
    }
}

// Sửa vị trí cuộn của sticky
@each $breakpoint in map-keys($grid-breakpoints) {
    @include media-breakpoint-up($breakpoint) {
        $infix: breakpoint-infix($breakpoint, $grid-breakpoints);

        .sticky#{$infix}-top {
            top: $header-height;
        }
    }
}

// Card
.card {
    > .list-group:last-child {
        > .list-group-item:last-child {
            border-bottom-right-radius: var(--bs-border-radius);
            border-bottom-left-radius: var(--bs-border-radius);
        }
    }
}

.card-header {
    --bs-card-border-width: var(--bs-border-width);
}

.table-card {
    margin: calc(-1 * $card-spacer-y) calc(-1 * $card-spacer-x);

    td, th {
        &:first-child {
            padding-left: $card-spacer-x;
        }
    }

    td, th {
        &:last-child {
            padding-right: $card-spacer-x;
        }
    }

    tbody, tfoot, thead {
        &:last-child {
            tr:last-child {
                td, th {
                    border-bottom-width: 0;
                }
            }
        }
    }
}

.table-accordion {
    margin: calc(-1 * $accordion-padding-y) calc(-1 * $accordion-padding-x);

    td, th {
        &:first-child {
            padding-left: $accordion-padding-x;
        }
    }

    td, th {
        &:last-child {
            padding-right: $accordion-padding-x;
        }
    }

    tbody, tfoot, thead {
        &:last-child {
            tr:last-child {
                td, th {
                    border-bottom-width: 0;
                }
            }
        }
    }
}

.table {
    thead {
        --bs-table-bg: var(--nv-table-thead-bg);
    }
}

.card-header-tabs {
    margin-right: calc(-1 * var(--bs-card-cap-padding-x));
    margin-left: calc(-1 * var(--bs-card-cap-padding-x));
    margin-top: calc(-.5 * var(--bs-card-cap-padding-y));

    .nav-tabs {
        padding-left: calc(0.5 * var(--bs-card-cap-padding-x));
        padding-right: calc(0.5 * var(--bs-card-cap-padding-x));
    }
}

// Pagination
.pagination-wrap {
    .pagination {
        margin-bottom: 0;
    }
}

// Width in px
@for $i from 1 through 20 {
    .fw-#{$i * 25} {
        width: #{$i * 25}px!important;
    }
}

// Block ellipsis: Chú ý class này chỉ dùng khi không thiết lập font-size, line-height mà dùng mặc định của body
@for $i from 2 through 4 {
    .text-truncate-#{$i} {
        max-height: calc($font-size-base * $line-height-base * $i);
        -webkit-line-clamp: #{$i};
        overflow: hidden;
        text-overflow: ellipsis;
        display: -webkit-box;
        -webkit-box-orient: vertical;
    }
}
